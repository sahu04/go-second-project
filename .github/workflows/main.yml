# name: go-docker

# on:
#   push:
#     branches:
#       - master

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Run Unit Tests
#         run: go test

#   deploy:
#     runs-on: ubuntu-latest
#     needs: test
#     steps:
#       - name: Set up QEMU
#         uses: docker/setup-qemu-action@v1

#       - name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v1

#       - name: Login to DockerHub
#         uses: docker/login-action@v1
#         with:
#           username: ${{ secrets.DOCKER_USER_NAME }}
#           password: ${{ secrets.DOCKER_ACCESS_TOKEN }}
#         env:
#           DOCKER_USERNAME: ${{ secrets.DOCKER_USER_NAME }}
#           DOCKER_PASSWORD: ${{ secrets.DOCKER_ACCESS_TOKEN }}
#
#       - name: Build and push Docker images
#         id: docker_build
#         uses: docker/build-push-action@v2.3.0
#         with:
#           push: true
#           tags: |
#            dikshasahu/golang:latest
#           build-args: |
#             VERSION=main

name: trivy-scanning

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  

permissions: write-all

jobs:
  trivy-scanning-job:
    name: trivy-sec-scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'HIGH,CRITICAL'

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Build an image from Dockerfile
        run: |
          docker build -t docker.io/devops-counsel/py-app:${{ github.sha }} .
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/devops-counsel/py-app:${{ github.sha }}'
          format: 'table'
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          
      - name: Install grype
        run: |
          curl -sSfL https://raw.githubusercontent.com/anchore/grype/main/install.sh | sh -s -- -b /usr/local/bin

      - name: Run grype vulnerability scan
        run: grype -o sarif docker.io/devops-counsel/py-app:${{ github.sha }} > grype-results.sarif
      
      - name: Upload grype scan results
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'grype-results.sarif'

